#Contains the main loop
class VABProcess( object ):

    def __init__(self, TestSystem):
        self._system = TestSystem
        self._currentData = [];
    
    #Order of events in process:
    #-New data is requested from the sensors (then a short wait happens)
    #-That data is read into currentData
    #-The data is then sent to process data, where the magic happens
    #-All data generated by processData is then stored
    #-Any changes to the system that need to be made happen
    #loop back to the beginning
    def process(self):
        confidence = 0.0;
        while confidence < .99:
            self.requestData()
            self.readData()
            self.processData()
            self.storeData()
            self.intervene()
        
    def requestData(self):
        raise NotImplementedError("'request' not yet implemented")
    
    def readData(self):
        self._system.read()
        
    def processData(self):
        raise NotImplementedError("'processData' not yet implemented")
        
    def storeData(self):
        raise NotImplementedError("'storeData' not yet implemented")
        
    def intervene(self):
        self._system.actuate(0, 1)
        